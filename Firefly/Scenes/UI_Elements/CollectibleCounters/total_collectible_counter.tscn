[gd_scene load_steps=15 format=3 uid="uid://dldtioocav27m"]

[ext_resource type="Theme" uid="uid://dtqfsbjdbbwas" path="res://UI_Theme/Brimblo.tres" id="1_fpka2"]
[ext_resource type="Script" path="res://Scenes/UI_Elements/CollectibleCounters/TotalCollectibleCounter.gd" id="2_amvrn"]
[ext_resource type="Texture2D" uid="uid://bh4ifsauhlnhp" path="res://Assets/Graphics/Particles/Star1.png" id="3_3hr1d"]
[ext_resource type="Script" path="res://Scenes/UI_Elements/CollectibleCounters/Glitter.gd" id="4_m5v6b"]

[sub_resource type="Shader" id="Shader_5xd70"]
code = "shader_type canvas_item;

// Parameters for rounded rectangle
uniform vec2 SIZE = vec2(0.4, 0.2); // Size of the rectangle
uniform float RADIUS : hint_range(0.0, 0.5) = 0.1;         // Corner radius

// Parameters for wave distortion
uniform float waveFrequency : hint_range(0.0, 50.0) = 10.0; // Wave frequency
uniform float waveAmplitude : hint_range(0.0, 0.5) = 0.02;  // Wave amplitude
uniform float waveSpeed : hint_range(0.0, 10.0) = 2.0;      // Wave speed

// Hard edges or smooth edges
uniform bool hard_edges = true; // If true, edges are sharp (on/off)

// Rounded rectangle SDF
float rounded_rect_sdf(vec2 uv, vec2 size, float radius) {
    vec2 d = abs(uv - vec2(0.5)) - size + vec2(radius);
    return length(max(d, 0.0)) - radius;
}

// Wavy distortion
float wave_distortion(vec2 uv, float frequency, float amplitude, float speed) {
    return sin(uv.y * frequency + TIME * speed) * amplitude;
}

// Fragment shader
void fragment() {
    vec2 uv = UV;
    
    // Calculate the SDF for the rounded rectangle
    float sdf = rounded_rect_sdf(uv, SIZE, RADIUS);
    
    // Apply wave distortion to the SDF
    sdf += wave_distortion(uv, waveFrequency, waveAmplitude, waveSpeed);
    
    // Determine the fill (1 for inside, 0 for outside)
    float fill = hard_edges ? step(0.0, -sdf) : smoothstep(0.0, 0.01, -sdf);
    
    // Blend the original texture color with the fill
    vec4 originalColor = COLOR;
    COLOR = vec4(originalColor.rgb, originalColor.a * fill);
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_5cx44"]
shader = SubResource("Shader_5xd70")
shader_parameter/SIZE = Vector2(0.45, 0.45)
shader_parameter/RADIUS = 0.1
shader_parameter/waveFrequency = 6.0
shader_parameter/waveAmplitude = 0.01
shader_parameter/waveSpeed = 2.0
shader_parameter/hard_edges = true

[sub_resource type="Shader" id="Shader_mu37q"]
code = "shader_type canvas_item;

// Parameters for rounded rectangle
uniform vec2 SIZE = vec2(0.4, 0.2); // Size of the rectangle
uniform float RADIUS : hint_range(0.0, 0.5) = 0.1;         // Corner radius

// Parameters for wave distortion
uniform float waveFrequency : hint_range(0.0, 50.0) = 10.0; // Wave frequency
uniform float waveAmplitude : hint_range(0.0, 0.5) = 0.02;  // Wave amplitude
uniform float waveSpeed : hint_range(0.0, 10.0) = 2.0;      // Wave speed

// Hard edges or smooth edges
uniform bool hard_edges = true; // If true, edges are sharp (on/off)

// Rounded rectangle SDF
float rounded_rect_sdf(vec2 uv, vec2 size, float radius) {
    vec2 d = abs(uv - vec2(0.5)) - size + vec2(radius);
    return length(max(d, 0.0)) - radius;
}

// Wavy distortion
float wave_distortion(vec2 uv, float frequency, float amplitude, float speed) {
    return sin(uv.y * frequency + TIME * speed) * amplitude;
}

// Fragment shader
void fragment() {
    vec2 uv = UV;
    
    // Calculate the SDF for the rounded rectangle
    float sdf = rounded_rect_sdf(uv, SIZE, RADIUS);
    
    // Apply wave distortion to the SDF
    sdf += wave_distortion(uv, waveFrequency, waveAmplitude, waveSpeed);
    
    // Determine the fill (1 for inside, 0 for outside)
    float fill = hard_edges ? step(0.0, -sdf) : smoothstep(0.0, 0.01, -sdf);
    
    // Blend the original texture color with the fill
    vec4 originalColor = COLOR;
    COLOR = vec4(originalColor.rgb, originalColor.a * fill);
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_t0m7x"]
shader = SubResource("Shader_mu37q")
shader_parameter/SIZE = Vector2(0.45, 0.45)
shader_parameter/RADIUS = 0.1
shader_parameter/waveFrequency = 6.0
shader_parameter/waveAmplitude = 0.03
shader_parameter/waveSpeed = 1.0
shader_parameter/hard_edges = true

[sub_resource type="Curve" id="Curve_teir1"]
_data = [Vector2(0, 0), 0.0, 0.0, 0, 0, Vector2(0.65, 1), 0.0, 0.0, 0, 0, Vector2(1, 0), 0.0, 0.0, 0, 0]
point_count = 3
metadata/_snap_enabled = true
metadata/_snap_count = 20

[sub_resource type="Gradient" id="Gradient_2r02t"]
offsets = PackedFloat32Array(0.9, 1)
colors = PackedColorArray(1, 1, 1, 1, 1, 1, 1, 0)
metadata/_snap_enabled = true

[sub_resource type="Animation" id="Animation_mlp1y"]
resource_name = "Hide"
length = 0.3
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("../../..:anchor_left")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.3),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0.65, 1.0]
}

[sub_resource type="Animation" id="Animation_f3hlc"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("../../..:anchor_left")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [1.0]
}

[sub_resource type="Animation" id="Animation_aijno"]
resource_name = "Show"
length = 0.3
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("../../..:anchor_left")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.3),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [1.0, 0.65]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_uw2ul"]
_data = {
"Hide": SubResource("Animation_mlp1y"),
"RESET": SubResource("Animation_f3hlc"),
"Show": SubResource("Animation_aijno")
}

[node name="CollectibleCounter" type="Control" node_paths=PackedStringArray("CONTAINER", "LEVEL_COUNTER", "GAME_COUNTER", "COUNTER_ANIMATOR", "ANIMATION_TIMER", "LEVEL_GLITTER", "TOTAL_GLITTER")]
z_index = 1
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
theme = ExtResource("1_fpka2")
script = ExtResource("2_amvrn")
CONTAINER = NodePath("Corner")
LEVEL_COUNTER = NodePath("Corner/VBoxContainer/Level/Count")
GAME_COUNTER = NodePath("Corner/VBoxContainer/Total/Count")
COUNTER_ANIMATOR = NodePath("AnimationPlayer")
ANIMATION_TIMER = NodePath("HideTimer")
LEVEL_GLITTER = NodePath("Corner/VBoxContainer/Level/Count/Glitter")
TOTAL_GLITTER = NodePath("Corner/VBoxContainer/Total/Count/Glitter2")
shine_color = Color(0.890196, 0.921569, 0.34902, 1)

[node name="Corner" type="Control" parent="."]
clip_contents = true
layout_mode = 1
anchor_left = 1.0
anchor_top = 0.05
anchor_right = 1.0
anchor_bottom = 0.3
grow_horizontal = 0

[node name="Outline" type="ColorRect" parent="Corner"]
material = SubResource("ShaderMaterial_5cx44")
layout_mode = 1
anchors_preset = -1
anchor_right = 1.2
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0.235294, 0.2, 0.501961, 1)

[node name="Wobble" type="ColorRect" parent="Corner"]
material = SubResource("ShaderMaterial_t0m7x")
layout_mode = 1
anchors_preset = -1
anchor_right = 1.2
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0.490196, 0.439216, 0.741176, 1)

[node name="VBoxContainer" type="VBoxContainer" parent="Corner"]
layout_mode = 1
anchors_preset = -1
anchor_left = 0.2
anchor_top = 0.15
anchor_right = 0.9
anchor_bottom = 0.9
grow_horizontal = 2
grow_vertical = 2

[node name="Level" type="HBoxContainer" parent="Corner/VBoxContainer"]
layout_mode = 2
size_flags_vertical = 3

[node name="Label" type="Label" parent="Corner/VBoxContainer/Level"]
layout_mode = 2
size_flags_horizontal = 0
size_flags_vertical = 1
theme_type_variation = &"pause_counter_text"
text = "Level: "
vertical_alignment = 1
uppercase = true

[node name="Count" type="Label" parent="Corner/VBoxContainer/Level"]
layout_mode = 2
size_flags_horizontal = 10
size_flags_vertical = 1
theme_type_variation = &"pause_counter_count"
text = "01/20"
horizontal_alignment = 2
vertical_alignment = 1

[node name="Glitter" type="CPUParticles2D" parent="Corner/VBoxContainer/Level/Count"]
position = Vector2(111, 33)
emitting = false
amount = 15
lifetime = 0.4
speed_scale = 0.5
local_coords = true
texture = ExtResource("3_3hr1d")
emission_shape = 3
emission_rect_extents = Vector2(111, 33)
gravity = Vector2(2.08165e-12, -30)
angular_velocity_min = -180.0
angular_velocity_max = 180.0
radial_accel_min = 20.0
radial_accel_max = 25.0
angle_max = 90.0
scale_amount_min = 0.5
scale_amount_curve = SubResource("Curve_teir1")
color = Color(0.890196, 0.921569, 0.34902, 1)
color_ramp = SubResource("Gradient_2r02t")
hue_variation_min = -1.0
hue_variation_max = 1.0
script = ExtResource("4_m5v6b")

[node name="Total" type="HBoxContainer" parent="Corner/VBoxContainer"]
layout_mode = 2
size_flags_vertical = 3

[node name="Label" type="Label" parent="Corner/VBoxContainer/Total"]
layout_mode = 2
size_flags_horizontal = 0
theme_type_variation = &"pause_counter_text"
text = "Total: "
uppercase = true

[node name="Count" type="Label" parent="Corner/VBoxContainer/Total"]
layout_mode = 2
size_flags_horizontal = 10
theme_type_variation = &"pause_counter_count"
text = "01/51"

[node name="Glitter2" type="CPUParticles2D" parent="Corner/VBoxContainer/Total/Count"]
position = Vector2(111, -74)
emitting = false
amount = 15
lifetime = 0.4
speed_scale = 0.5
local_coords = true
texture = ExtResource("3_3hr1d")
emission_shape = 3
emission_rect_extents = Vector2(111, 33)
gravity = Vector2(2.08165e-12, -30)
angular_velocity_min = -180.0
angular_velocity_max = 180.0
radial_accel_min = 20.0
radial_accel_max = 25.0
angle_max = 90.0
scale_amount_min = 0.5
scale_amount_curve = SubResource("Curve_teir1")
color = Color(0.890196, 0.921569, 0.34902, 1)
color_ramp = SubResource("Gradient_2r02t")
hue_variation_min = -1.0
hue_variation_max = 1.0
script = ExtResource("4_m5v6b")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
root_node = NodePath("../Corner/VBoxContainer/Level/Label")
libraries = {
"": SubResource("AnimationLibrary_uw2ul")
}

[node name="HideTimer" type="Timer" parent="."]
wait_time = 3.0
one_shot = true

[connection signal="timeout" from="HideTimer" to="." method="_on_hide_timer_timeout"]
